{"ast":null,"code":"import _classCallCheck from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import reportWebVitals from'./reportWebVitals';import'./index.css';//import { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nimport{enviroments}from'./config.ts';import HTMLRender from'./components/HTMLRenderComponent.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyPage=/*#__PURE__*/function(_React$Component){_inherits(MyPage,_React$Component);var _super=_createSuper(MyPage);function MyPage(props){var _this;_classCallCheck(this,MyPage);_this=_super.call(this,props);_this.mySubmitHandler=function(event){event.preventDefault();//const urlAddress = 'https://api.helsedirektoratet.no/innhold/innhold';\nvar enviroment=_this.state.enviroment;var setEnviroments=enviroments.find(function(o){return o.id===enviroment;});var url=setEnviroments.url;var key=setEnviroments.key;if(_this.state.uglyId){url+='/'+_this.state.uglyId;}else{url+='?kodeverk='+_this.state.codeSystem+\"&kode=\"+_this.state.code;}_this.setState({url:url});fetch(url,{method:'GET',headers:{'Accept':'application/json','Ocp-Apim-Subscription-Key':key}}).then(function(response){return response.json();}).then(function(data){return _this.responseHandler(data);});};_this.responseHandler=function(data){if(data){_this.setState({response:JSON.stringify(data,null,2)});}};_this.myChangeHandler=function(event){_this.setState({uglyId:event.target.value});};_this.ChangeHandlerCode=function(event){_this.setState({code:event.target.value});};_this.ChangeHandlerCodeSystem=function(event){_this.setState({codeSystem:event.target.value});};_this.ChangeHandlerEnviroment=function(event){_this.setState({enviroment:event.target.value});};_this.state={uglyId:'',codeSystem:'',code:'',url:'',response:'',records:[],enviroment:'prod'};return _this;}_createClass(MyPage,[{key:\"render\",value:/* renderJson() {\n    if (this.state.response) {\n      let json = JSON.parse(this.state.response);\n      console.log(json);\n\n      if (Array.isArray(json)) {\n        console.log(json);\n        return json.map((item, index) =>\n          <div key={index}>\n\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent name={item.id}> \n            {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead>:null} \n              <CollapsibleContent><div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div>\n              </CollapsibleContent>\n      \n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n              <CollapsibleContent>\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>DokumentType</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                </tbody></table>\n                </CollapsibleContent>\n                </CollapsibleComponent>\n\n          </div>);\n      } else {\n        //if object (checking)\n        let item = json;\n        console.log(Array.isArray(item));\n        console.log('object');\n\n        return (\n          <div>\n\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent>\n            {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead>:null} \n             <CollapsibleContent><div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div></CollapsibleContent>\n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n              <CollapsibleContent>\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.intro : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>grouppeID</td><td>{item.gruppeId ? item.gruppeId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system</td><td>{item.koder.ICPC - 2}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system</td><td>{item.koder.ICD - 10}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Technical data</td><td>{item.tekniskeData ? '' : 'none'}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info Id</td><td>{(item.tekniskeData && item.tekniskeData.infoId) ? item.tekniskeData.infoId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info type</td><td>{(item.tekniskeData && item.tekniskeData.infoType) ? item.tekniskeData.infoType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Subtype</td><td>{(item.tekniskeData && item.tekniskeData.subType) ? item.tekniskeData.subType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>HAPI id</td><td>{(item.tekniskeData && item.tekniskeData.HapiId) ? item.tekniskeData.HapiId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td colSpan=\"2\">{this.renderLinks(item.links)}</td>\n                  </tr>\n\n                </tbody></table>\n\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Attachments</td><td>{item.attachments ? item.attachments : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Document type</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Last import to HAPI</td><td>{item.sistImportertTilHapi ? item.sistImportertTilHapi : ''}</td>\n                  </tr>\n\n                </tbody></table>\n              </CollapsibleContent>\n            </CollapsibleComponent>\n\n          </div>);\n      }\n    }\n    return '';\n  }*/ /* renderLinks(links) {\n    return links.map((item, index) =>\n      <div key={index}>\n\n        <table><tbody>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Rel</td><td>{item.rel ? item.rel : ''}</td>\n          </tr>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Type</td><td>{item.type ? item.type : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Href</td><td>{item.href ? item.href : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Struktur Id</td><td>{item.strukturId ? item.strukturId : ''}</td>\n          </tr>\n\n\n        </tbody></table>\n\n      </div>);\n  }\n*/function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.mySubmitHandler,children:[/*#__PURE__*/_jsxs(\"select\",{name:\"enviroment\",id:\"enviroment\",onChange:function onChange(evt){return _this2.ChangeHandlerEnviroment(evt);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"prod\",children:\"Production\"}),/*#__PURE__*/_jsx(\"option\",{value:\"test\",children:\"Test\"}),/*#__PURE__*/_jsx(\"option\",{value:\"qa\",children:\"QA\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please provide either HAPI-id or code from a code system\"}),/*#__PURE__*/_jsx(\"input\",{id:\"id\",type:\"text\",autoComplete:\"on\",placeholder:\"HAPI-id\",value:this.state.uglyId,onChange:function onChange(evt){return _this2.myChangeHandler(evt);}}),/*#__PURE__*/_jsx(\"span\",{className:\"marginRight\",children:\"or\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"codeSystem\",id:\"codeSystem\",onChange:function onChange(evt){return _this2.ChangeHandlerCodeSystem(evt);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",select:\"default\",children:\"Choose code system\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ICD-10\",children:\"ICD-10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ICPC-2\",children:\"ICPC-2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ATC\",children:\"ATC\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SNOMED-CT\",children:\"SNOMED-CT\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",autoComplete:\"on\",id:\"code\",placeholder:\"Code\",value:this.state.code,onChange:function onChange(evt){return _this2.ChangeHandlerCode(evt);}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\u043F\\u043E\\u0438\\u0441\\u043A\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(HTMLRender,{})}),/*#__PURE__*/_jsx(\"div\",{children:\"here is the JSON part\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"pre\",{children:this.state.response})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"h4\",{children:this.state.url})})})]});}}]);return MyPage;}(React.Component);ReactDOM.render(/*#__PURE__*/_jsx(MyPage,{}),document.getElementById('root'));reportWebVitals();","map":{"version":3,"sources":["/Users/eirik/Kodz/HAPI/src/index.js"],"names":["React","ReactDOM","reportWebVitals","enviroments","HTMLRender","MyPage","props","mySubmitHandler","event","preventDefault","enviroment","state","setEnviroments","find","o","id","url","key","uglyId","codeSystem","code","setState","fetch","method","headers","then","response","json","data","responseHandler","JSON","stringify","myChangeHandler","target","value","ChangeHandlerCode","ChangeHandlerCodeSystem","ChangeHandlerEnviroment","records","evt","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n//import { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nimport { enviroments } from './config.ts';\nimport HTMLRender from './components/HTMLRenderComponent.js';\n\nclass MyPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uglyId: '',\n      codeSystem: '',\n      code: '',\n      url: '',\n      response: '',\n      records: [],\n      enviroment: 'prod',\n\n    };\n  \n  }\n\n  \n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n\n    //const urlAddress = 'https://api.helsedirektoratet.no/innhold/innhold';\n    const enviroment = this.state.enviroment;\n    let setEnviroments = enviroments.find(o => o.id === enviroment);\n\n    let url = setEnviroments.url;\n    let key = setEnviroments.key\n    if (this.state.uglyId) {\n      url += '/' + this.state.uglyId;\n    } else {\n      url += '?kodeverk=' + this.state.codeSystem + \"&kode=\" + this.state.code;\n    } \n    \n   \n\n    this.setState({ url: url });\n\n    fetch(url,\n      {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Ocp-Apim-Subscription-Key': key\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(data => this.responseHandler(data));\n  }\n\n  responseHandler = (data) => {\n    if (data) {\n      this.setState({\n        response: JSON.stringify(data, null, 2)\n      });\n    }\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({\n      uglyId: event.target.value\n    });\n  }\n  ChangeHandlerCode = (event) => {\n    this.setState({\n      code: event.target.value\n    });\n  }\n  ChangeHandlerCodeSystem = (event) => {\n    this.setState({\n      codeSystem: event.target.value\n    });\n  }\n  ChangeHandlerEnviroment = (event) => {\n    this.setState({\n      enviroment: event.target.value\n    \n    });\n  }\n\n /* renderJson() {\n    if (this.state.response) {\n      let json = JSON.parse(this.state.response);\n      console.log(json);\n\n      if (Array.isArray(json)) {\n        console.log(json);\n        return json.map((item, index) =>\n          <div key={index}>\n\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent name={item.id}> \n            {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead>:null} \n              <CollapsibleContent><div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div>\n              </CollapsibleContent>\n      \n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n              <CollapsibleContent>\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>DokumentType</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                </tbody></table>\n                </CollapsibleContent>\n                </CollapsibleComponent>\n\n          </div>);\n      } else {\n        //if object (checking)\n        let item = json;\n        console.log(Array.isArray(item));\n        console.log('object');\n\n        return (\n          <div>\n\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent>\n            {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead>:null} \n             <CollapsibleContent><div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div></CollapsibleContent>\n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n              <CollapsibleContent>\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.intro : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>grouppeID</td><td>{item.gruppeId ? item.gruppeId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system</td><td>{item.koder.ICPC - 2}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system</td><td>{item.koder.ICD - 10}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Technical data</td><td>{item.tekniskeData ? '' : 'none'}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info Id</td><td>{(item.tekniskeData && item.tekniskeData.infoId) ? item.tekniskeData.infoId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info type</td><td>{(item.tekniskeData && item.tekniskeData.infoType) ? item.tekniskeData.infoType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Subtype</td><td>{(item.tekniskeData && item.tekniskeData.subType) ? item.tekniskeData.subType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>HAPI id</td><td>{(item.tekniskeData && item.tekniskeData.HapiId) ? item.tekniskeData.HapiId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td colSpan=\"2\">{this.renderLinks(item.links)}</td>\n                  </tr>\n\n                </tbody></table>\n\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Attachments</td><td>{item.attachments ? item.attachments : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Document type</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Last import to HAPI</td><td>{item.sistImportertTilHapi ? item.sistImportertTilHapi : ''}</td>\n                  </tr>\n\n                </tbody></table>\n              </CollapsibleContent>\n            </CollapsibleComponent>\n\n          </div>);\n      }\n    }\n    return '';\n  }*/\n\n\n /* renderLinks(links) {\n    return links.map((item, index) =>\n      <div key={index}>\n\n        <table><tbody>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Rel</td><td>{item.rel ? item.rel : ''}</td>\n          </tr>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Type</td><td>{item.type ? item.type : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Href</td><td>{item.href ? item.href : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Struktur Id</td><td>{item.strukturId ? item.strukturId : ''}</td>\n          </tr>\n\n\n        </tbody></table>\n\n      </div>);\n  }\n*/\n\n  render() {\n    return (\n      <div>\n\n        <form onSubmit={this.mySubmitHandler}>\n        <select name=\"enviroment\" id=\"enviroment\"\n            onChange={evt => this.ChangeHandlerEnviroment(evt)}\n          >\n         <option value=\"prod\">Production</option>\n            <option value=\"test\">Test</option>\n            <option value=\"qa\">QA</option>\n            \n          </select>\n          <p>Please provide either HAPI-id or code from a code system</p>\n          <input\n            id=\"id\"\n            type='text'\n            autoComplete=\"on\"\n            placeholder=\"HAPI-id\"\n            value={this.state.uglyId}\n            onChange={evt => this.myChangeHandler(evt)}\n          />\n\n          <span className=\"marginRight\">or</span>\n\n          <select name=\"codeSystem\" id=\"codeSystem\"\n            onChange={evt => this.ChangeHandlerCodeSystem(evt)}\n          >\n            <option value=\"\" select=\"default\">Choose code system</option>\n            <option value=\"ICD-10\">ICD-10</option>\n            <option value=\"ICPC-2\">ICPC-2</option>\n            <option value=\"ATC\">ATC</option>\n            <option value=\"SNOMED-CT\">SNOMED-CT</option>\n          </select>\n\n          <input\n            type='text'\n            autoComplete=\"on\"\n            id=\"code\"\n            placeholder=\"Code\"\n            value={this.state.code}\n            onChange={evt => this.ChangeHandlerCode(evt)}\n          />\n\n          <input\n            type='submit'\n            value=\"поиск\"\n          />\n        </form>\n\n\n       <div><HTMLRender/></div>\n        <div>here is the JSON part</div>\n        <div><pre>{this.state.response}</pre></div>\n        <div><pre><h4>{this.state.url}</h4></pre></div>\n\n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(<MyPage />, document.getElementById('root'));\n\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}