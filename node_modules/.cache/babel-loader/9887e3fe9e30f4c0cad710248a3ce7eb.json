{"ast":null,"code":"var _jsxFileName = \"/Users/eirik/Kodz/HAPI/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css'; //import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n/*const mysecondelement = (\n<ul>\n  <h1>Put your request here:</h1>\n  <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  <button onclick=\"activateLasers()\">Send the request</button>\n</ul>\n);\n*/\n//const myfirstelement = <button onclick=\"activateLasers()\">Send</button>\n\n/* const textcomponent = () => (\n <div>\n   <h1>Put your request here:</h1>\n </div>\n);\nconst areacomponent = () => (\n <div>\n   <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n </div>\n);\nconst buttoncomponent = () => (\n <div>\n   <button onclick=\"activateLasers()\">Send the request</button>\n </div>\n);\nReactDOM.render(\n <div>\n   <textcomponent />\n   <areacomponent />\n   <buttoncomponent />\n </div>, document.getElementById(\"root\")\n);\n*/\n\n/*\nconst buttoncomponent = () => {\n  const handleClick = () => console.log('here');\n    return (\n      <div>\n        <button onClick={handleClick}>Click here:</button>\n      </div>\n  );\n};\n\nconst TextAreaComponent = () => {\n  const [textAreaComponentValue, setTextAreaComponentValue] = useState<string>(\"\");\n    return (\n      <textarea \n        value={textAreaComponentValue} \n        onChange={(\n          ev: React.ChangeEvent<HTMLTextAreaElement>,\n          ) : void => setTextAreaComponentValue(ev.target.value)}\n      />\n    );\n};\n\nconst textcomponent = () =>\n  <p>Put here</p>\n;\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>,\n  document.querySelector('#root')\n);\n*/\n\n/*\nReactDOM.render(\n  const mysecondelement = <h1>Send</h1>;\n, document.getElementById('root')\n  );*/\n\n/*<React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n\n);\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault(); //alert(\"You are sending \" + this.state.uglyId);\n\n      fetch('https://api.helsedirektoratet.no/innhold/innhold/' + this.state.uglyId, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Ocp-Apim-Subscription-Key': '89b72a3ad5cf4723b3f489c3eb4d82a1'\n        }\n      }).then(response => response.json()).then(data => this.responseHandler(data));\n    };\n\n    this.responseHandler = data => {\n      if (data) {\n        this.setState({\n          response: JSON.stringify(data, null, 2)\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        uglyId: event.target.value\n      });\n    };\n\n    this.state = {\n      uglyId: '',\n      response: ''\n    };\n    this.state = {\n      codeSystem: '',\n      response: ''\n    };\n  }\n  /* componentDidMount() {\n    fetch('https://api.helsedirektoratet.no/innhold/innhold?q=react')\n        .then(response => response.json())\n        .then(data => this.setState({ uglyId: data.total }) );\n  }; */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.mySubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please provide either HAPI-id or code from a code system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"HAPI-id\",\n          value: this.state.uglyId,\n          onChange: evt => this.myChangeHandler(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"marginRight\",\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Code system\",\n          value: this.state.codeSystem,\n          onChange: evt => this.myChangeHandler(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Code\",\n          value: this.state.codeSystem,\n          onChange: evt => this.myChangeHandler(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u043F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: this.state.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 192,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nreportWebVitals();","map":{"version":3,"sources":["/Users/eirik/Kodz/HAPI/src/index.js"],"names":["React","ReactDOM","reportWebVitals","MyPage","Component","constructor","props","mySubmitHandler","event","preventDefault","fetch","state","uglyId","method","headers","then","response","json","data","responseHandler","setState","JSON","stringify","myChangeHandler","target","value","codeSystem","render","evt","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n/*const mysecondelement = (\n<ul>\n  <h1>Put your request here:</h1>\n  <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  <button onclick=\"activateLasers()\">Send the request</button>\n</ul>\n);\n*/\n\n\n//const myfirstelement = <button onclick=\"activateLasers()\">Send</button>\n\n /* const textcomponent = () => (\n  <div>\n    <h1>Put your request here:</h1>\n  </div>\n);\n\nconst areacomponent = () => (\n  <div>\n    <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  </div>\n);\n\nconst buttoncomponent = () => (\n  <div>\n    <button onclick=\"activateLasers()\">Send the request</button>\n  </div>\n);\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>, document.getElementById(\"root\")\n);\n*/\n\n\n/*\nconst buttoncomponent = () => {\n  const handleClick = () => console.log('here');\n    return (\n      <div>\n        <button onClick={handleClick}>Click here:</button>\n      </div>\n  );\n};\n\nconst TextAreaComponent = () => {\n  const [textAreaComponentValue, setTextAreaComponentValue] = useState<string>(\"\");\n    return (\n      <textarea \n        value={textAreaComponentValue} \n        onChange={(\n          ev: React.ChangeEvent<HTMLTextAreaElement>,\n          ) : void => setTextAreaComponentValue(ev.target.value)}\n      />\n    );\n};\n\nconst textcomponent = () =>\n  <p>Put here</p>\n;\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>,\n  document.querySelector('#root')\n);\n*/\n\n\n/*\nReactDOM.render(\n  const mysecondelement = <h1>Send</h1>;\n, document.getElementById('root')\n  );*/\n\n  /*<React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nclass MyPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      uglyId: '',\n      response: ''\n    };\n    this.state = { \n      codeSystem: '',\n      response: ''\n    };\n\n  }\n\n  /* componentDidMount() {\n    fetch('https://api.helsedirektoratet.no/innhold/innhold?q=react')\n        .then(response => response.json())\n        .then(data => this.setState({ uglyId: data.total }) );\n  }; */\n  \n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    //alert(\"You are sending \" + this.state.uglyId);\n    fetch('https://api.helsedirektoratet.no/innhold/innhold/' + this.state.uglyId,\n    {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Ocp-Apim-Subscription-Key' : '89b72a3ad5cf4723b3f489c3eb4d82a1'\n      }\n    }\n    )\n    .then(response => response.json())\n    .then(data => this.responseHandler(data));\n  }\n\n  responseHandler = (data) => {\n    if(data) {\n      this.setState({\n        response: JSON.stringify(data, null, 2)\n      });\n    }\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({\n      uglyId: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.mySubmitHandler}>\n          <p>Please provide either HAPI-id or code from a code system</p>\n          <input\n            type='text'\n            placeholder=\"HAPI-id\"\n            value={this.state.uglyId}\n            onChange={evt => this.myChangeHandler(evt)}\n          />\n          <span class=\"marginRight\">or</span>\n            <input\n            type='text'\n            placeholder=\"Code system\"\n            value={this.state.codeSystem}\n            onChange={evt => this.myChangeHandler(evt)}\n          />\n           <input\n            type='text'\n            placeholder=\"Code\"\n            value={this.state.codeSystem}\n            onChange={evt => this.myChangeHandler(evt)}\n          />\n          <input\n            type='submit'\n            value=\"поиск\"\n          />\n        </form>\n        <div><pre>{this.state.response}</pre></div>\n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(<MyPage />, document.getElementById('root'));\n\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}