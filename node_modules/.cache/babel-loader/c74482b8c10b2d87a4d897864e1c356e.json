{"ast":null,"code":"import _classCallCheck from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/eirik/Kodz/HAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import reportWebVitals from'./reportWebVitals';import'./index.css';//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n/*const mysecondelement = (\n<ul>\n  <h1>Put your request here:</h1>\n  <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  <button onclick=\"activateLasers()\">Send the request</button>\n</ul>\n);\n*/ //const myfirstelement = <button onclick=\"activateLasers()\">Send</button>\n/* const textcomponent = () => (\n  <div>\n    <h1>Put your request here:</h1>\n  </div>\n);\n\nconst areacomponent = () => (\n  <div>\n    <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  </div>\n);\n\nconst buttoncomponent = () => (\n  <div>\n    <button onclick=\"activateLasers()\">Send the request</button>\n  </div>\n);\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>, document.getElementById(\"root\")\n);\n*/ /*\nconst buttoncomponent = () => {\n  const handleClick = () => console.log('here');\n    return (\n      <div>\n        <button onClick={handleClick}>Click here:</button>\n      </div>\n  );\n};\n\nconst TextAreaComponent = () => {\n  const [textAreaComponentValue, setTextAreaComponentValue] = useState<string>(\"\");\n    return (\n      <textarea \n        value={textAreaComponentValue} \n        onChange={(\n          ev: React.ChangeEvent<HTMLTextAreaElement>,\n          ) : void => setTextAreaComponentValue(ev.target.value)}\n      />\n    );\n};\n\nconst textcomponent = () =>\n  <p>Put here</p>\n;\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>,\n  document.querySelector('#root')\n);\n*/ /*\nReactDOM.render(\n  const mysecondelement = <h1>Send</h1>;\n, document.getElementById('root')\n  );*/ /*<React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n*/ // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyPage=/*#__PURE__*/function(_React$Component){_inherits(MyPage,_React$Component);var _super=_createSuper(MyPage);function MyPage(props){var _this;_classCallCheck(this,MyPage);_this=_super.call(this,props);_this.mySubmitHandler=function(event){event.preventDefault();if(_this.state.uglyId!=null){//alert(\"You are sending \" + this.state.uglyId);\nfetch('https://api.helsedirektoratet.no/innhold/innhold/'+_this.state.uglyId,{method:'GET',headers:{'Accept':'application/json','Ocp-Apim-Subscription-Key':'89b72a3ad5cf4723b3f489c3eb4d82a1'}}).then(function(response){return response.json();}).then(function(data){return _this.responseHandler(data);});}else{fetch('https://api.helsedirektoratet.no/innhold/innhold?kodeverk='+_this.state.codeSystem+\"&kode=\"+_this.state.code,{method:'GET',headers:{'Accept':'application/json','Ocp-Apim-Subscription-Key':'89b72a3ad5cf4723b3f489c3eb4d82a1'}}).then(function(response){return response.json();}).then(function(data){return _this.responseHandler(data);});}};_this.responseHandler=function(data){if(data){_this.setState({response:JSON.stringify(data,null,2)});}};_this.myChangeHandler=function(event){_this.setState({uglyId:event.target.value});};_this.ChangeHandlerCode=function(event){_this.setState({code:event.target.value});};_this.ChangeHandlerCodeSystem=function(event){_this.setState({codeSystem:event.target.value});};_this.state={uglyId:'',response:''};_this.state={codeSystem:'',response:''};_this.state={code:'',response:''};return _this;}/* componentDidMount() {\n    fetch('https://api.helsedirektoratet.no/innhold/innhold?q=react')\n        .then(response => response.json())\n        .then(data => this.setState({ uglyId: data.total }) );\n  }; */_createClass(MyPage,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.mySubmitHandler,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Please provide either HAPI-id or code from a code system\"}),/*#__PURE__*/_jsx(\"input\",{id:\"id\",type:\"text\",autoComplete:\"off\",placeholder:\"HAPI-id\",value:this.state.uglyId,onChange:function onChange(evt){return _this2.myChangeHandler(evt);}}),/*#__PURE__*/_jsx(\"span\",{class:\"marginRight\",children:\"or\"}),/*#__PURE__*/_jsx(\"input\",{id:\"codeSystem\",type:\"text\",autoComplete:\"off\",placeholder:\"Code system\",value:this.state.codeSystem,onChange:function onChange(evt){return _this2.ChangeHandlerCodeSystem(evt);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",autoComplete:\"off\",id:\"code\",placeholder:\"Code\",value:this.state.code,onChange:function onChange(evt){return _this2.ChangeHandlerCode(evt);}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\u043F\\u043E\\u0438\\u0441\\u043A\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"pre\",{children:this.state.response})})]});}}]);return MyPage;}(React.Component);ReactDOM.render(/*#__PURE__*/_jsx(MyPage,{}),document.getElementById('root'));reportWebVitals();","map":{"version":3,"sources":["/Users/eirik/Kodz/HAPI/src/index.js"],"names":["React","ReactDOM","reportWebVitals","MyPage","props","mySubmitHandler","event","preventDefault","state","uglyId","fetch","method","headers","then","response","json","data","responseHandler","codeSystem","code","setState","JSON","stringify","myChangeHandler","target","value","ChangeHandlerCode","ChangeHandlerCodeSystem","evt","Component","render","document","getElementById"],"mappings":"oiBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAO,aAAP,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAGA;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAGA;AACA;AACA;AACA;AACA,M,CAEE;AACF;AACA;AACA;AACA;AACA;AACA,E,CAEA;AACA;AACA;2FAGMC,CAAAA,M,4GAEJ,gBAAYC,KAAZ,CAAmB,wCACjB,uBAAMA,KAAN,EADiB,MAwBnBC,eAxBmB,CAwBD,SAACC,KAAD,CAAW,CAC3BA,KAAK,CAACC,cAAN,GACA,GAAI,MAAKC,KAAL,CAAWC,MAAX,EAAmB,IAAvB,CAA6B,CAC7B;AAEAC,KAAK,CAAC,oDAAsD,MAAKF,KAAL,CAAWC,MAAlE,CACL,CACEE,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,4BAA8B,kCAFvB,CAFX,CADK,CAAL,CAWCC,IAXD,CAWM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAXd,EAYCF,IAZD,CAYM,SAAAG,IAAI,QAAI,OAAKC,eAAL,CAAqBD,IAArB,CAAJ,EAZV,EAaD,CAhBC,IAkBG,CACHN,KAAK,CAAC,6DAA+D,MAAKF,KAAL,CAAWU,UAA1E,CAAuF,QAAvF,CAAkG,MAAKV,KAAL,CAAWW,IAA9G,CACL,CACER,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,4BAA8B,kCAFvB,CAFX,CADK,CAAL,CAWCC,IAXD,CAWM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAXd,EAYCF,IAZD,CAYM,SAAAG,IAAI,QAAI,OAAKC,eAAL,CAAqBD,IAArB,CAAJ,EAZV,EAaD,CAEA,CA5DkB,OA8DnBC,eA9DmB,CA8DD,SAACD,IAAD,CAAU,CAC1B,GAAGA,IAAH,CAAS,CACP,MAAKI,QAAL,CAAc,CACZN,QAAQ,CAAEO,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CADE,CAAd,EAGD,CACF,CApEkB,OAsEnBO,eAtEmB,CAsED,SAACjB,KAAD,CAAW,CAC3B,MAAKc,QAAL,CAAc,CACZX,MAAM,CAAEH,KAAK,CAACkB,MAAN,CAAaC,KADT,CAAd,EAGD,CA1EkB,OA2EnBC,iBA3EmB,CA2EC,SAACpB,KAAD,CAAW,CAC7B,MAAKc,QAAL,CAAc,CACZD,IAAI,CAAEb,KAAK,CAACkB,MAAN,CAAaC,KADP,CAAd,EAGD,CA/EkB,OAgFnBE,uBAhFmB,CAgFO,SAACrB,KAAD,CAAW,CACnC,MAAKc,QAAL,CAAc,CACZF,UAAU,CAAEZ,KAAK,CAACkB,MAAN,CAAaC,KADb,CAAd,EAGD,CApFkB,CAGjB,MAAKjB,KAAL,CAAa,CACXC,MAAM,CAAE,EADG,CAEXK,QAAQ,CAAE,EAFC,CAAb,CAIA,MAAKN,KAAL,CAAa,CACXU,UAAU,CAAE,EADD,CAEXJ,QAAQ,CAAE,EAFC,CAAb,CAIA,MAAKN,KAAL,CAAa,CACXW,IAAI,CAAE,EADK,CAEXL,QAAQ,CAAE,EAFC,CAAb,CAXiB,aAgBlB,CAED;AACF;AACA;AACA;AACA,O,yCAgEE,iBAAS,iBACP,mBACE,oCACE,cAAM,QAAQ,CAAE,KAAKT,eAArB,wBACE,+EADF,cAEE,cACE,EAAE,CAAC,IADL,CAEE,IAAI,CAAC,MAFP,CAGE,YAAY,CAAC,KAHf,CAIE,WAAW,CAAC,SAJd,CAKE,KAAK,CAAE,KAAKG,KAAL,CAAWC,MALpB,CAME,QAAQ,CAAE,kBAAAmB,GAAG,QAAI,CAAA,MAAI,CAACL,eAAL,CAAqBK,GAArB,CAAJ,EANf,EAFF,cAUE,aAAM,KAAK,CAAC,aAAZ,gBAVF,cAWI,cACA,EAAE,CAAC,YADH,CAEA,IAAI,CAAC,MAFL,CAGA,YAAY,CAAC,KAHb,CAIA,WAAW,CAAC,aAJZ,CAKA,KAAK,CAAE,KAAKpB,KAAL,CAAWU,UALlB,CAMA,QAAQ,CAAE,kBAAAU,GAAG,QAAI,CAAA,MAAI,CAACD,uBAAL,CAA6BC,GAA7B,CAAJ,EANb,EAXJ,cAmBG,cACC,IAAI,CAAC,MADN,CAEC,YAAY,CAAC,KAFd,CAGC,EAAE,CAAC,MAHJ,CAIC,WAAW,CAAC,MAJb,CAKC,KAAK,CAAE,KAAKpB,KAAL,CAAWW,IALnB,CAMC,QAAQ,CAAE,kBAAAS,GAAG,QAAI,CAAA,MAAI,CAACF,iBAAL,CAAuBE,GAAvB,CAAJ,EANd,EAnBH,cA2BE,cACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,gCAFR,EA3BF,GADF,cAiCE,kCAAK,qBAAM,KAAKpB,KAAL,CAAWM,QAAjB,EAAL,EAjCF,GADF,CAqCD,C,oBA9HkBd,KAAK,CAAC6B,S,EAkI3B5B,QAAQ,CAAC6B,MAAT,cAAgB,KAAC,MAAD,IAAhB,CAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B,EAEA9B,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n/*const mysecondelement = (\n<ul>\n  <h1>Put your request here:</h1>\n  <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  <button onclick=\"activateLasers()\">Send the request</button>\n</ul>\n);\n*/\n\n\n//const myfirstelement = <button onclick=\"activateLasers()\">Send</button>\n\n /* const textcomponent = () => (\n  <div>\n    <h1>Put your request here:</h1>\n  </div>\n);\n\nconst areacomponent = () => (\n  <div>\n    <textarea for=\"inputId\" id=\"inputId\" placeholder=\"yes, here...\"></textarea>\n  </div>\n);\n\nconst buttoncomponent = () => (\n  <div>\n    <button onclick=\"activateLasers()\">Send the request</button>\n  </div>\n);\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>, document.getElementById(\"root\")\n);\n*/\n\n\n/*\nconst buttoncomponent = () => {\n  const handleClick = () => console.log('here');\n    return (\n      <div>\n        <button onClick={handleClick}>Click here:</button>\n      </div>\n  );\n};\n\nconst TextAreaComponent = () => {\n  const [textAreaComponentValue, setTextAreaComponentValue] = useState<string>(\"\");\n    return (\n      <textarea \n        value={textAreaComponentValue} \n        onChange={(\n          ev: React.ChangeEvent<HTMLTextAreaElement>,\n          ) : void => setTextAreaComponentValue(ev.target.value)}\n      />\n    );\n};\n\nconst textcomponent = () =>\n  <p>Put here</p>\n;\n\nReactDOM.render(\n  <div>\n    <textcomponent />\n    <areacomponent />\n    <buttoncomponent />\n  </div>,\n  document.querySelector('#root')\n);\n*/\n\n\n/*\nReactDOM.render(\n  const mysecondelement = <h1>Send</h1>;\n, document.getElementById('root')\n  );*/\n\n  /*<React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nclass MyPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      uglyId: '',\n      response: ''\n    };\n    this.state = { \n      codeSystem: '',\n      response: ''\n    };\n    this.state = { \n      code: '',\n      response: ''\n    };\n\n  }\n\n  /* componentDidMount() {\n    fetch('https://api.helsedirektoratet.no/innhold/innhold?q=react')\n        .then(response => response.json())\n        .then(data => this.setState({ uglyId: data.total }) );\n  }; */\n  \n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    if (this.state.uglyId!=null) {\n    //alert(\"You are sending \" + this.state.uglyId);\n\n    fetch('https://api.helsedirektoratet.no/innhold/innhold/' + this.state.uglyId,\n    {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Ocp-Apim-Subscription-Key' : '89b72a3ad5cf4723b3f489c3eb4d82a1'\n      }\n    }\n    )\n  \n    \n    .then(response => response.json())\n    .then(data => this.responseHandler(data));\n  }\n\n  else {\n    fetch('https://api.helsedirektoratet.no/innhold/innhold?kodeverk=' + this.state.codeSystem + \"&kode=\" + this.state.code,\n    {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Ocp-Apim-Subscription-Key' : '89b72a3ad5cf4723b3f489c3eb4d82a1'\n      }\n    }\n    )\n  \n    \n    .then(response => response.json())\n    .then(data => this.responseHandler(data));\n  }\n\n  }\n\n  responseHandler = (data) => {\n    if(data) {\n      this.setState({\n        response: JSON.stringify(data, null, 2)\n      });\n    }\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({\n      uglyId: event.target.value\n    });\n  }\n  ChangeHandlerCode = (event) => {\n    this.setState({\n      code: event.target.value\n    });\n  }\n  ChangeHandlerCodeSystem = (event) => {\n    this.setState({\n      codeSystem: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.mySubmitHandler}>\n          <p>Please provide either HAPI-id or code from a code system</p>\n          <input\n            id=\"id\"\n            type='text'\n            autoComplete=\"off\"\n            placeholder=\"HAPI-id\"\n            value={this.state.uglyId}\n            onChange={evt => this.myChangeHandler(evt)}\n          />\n          <span class=\"marginRight\">or</span>\n            <input\n            id=\"codeSystem\"\n            type='text'\n            autoComplete=\"off\"\n            placeholder=\"Code system\"\n            value={this.state.codeSystem}\n            onChange={evt => this.ChangeHandlerCodeSystem(evt)}\n          />\n           <input\n            type='text'\n            autoComplete=\"off\"\n            id=\"code\"\n            placeholder=\"Code\"\n            value={this.state.code}\n            onChange={evt => this.ChangeHandlerCode(evt)}\n          />\n          <input\n            type='submit'\n            value=\"поиск\"\n          />\n        </form>\n        <div><pre>{this.state.response}</pre></div>\n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(<MyPage />, document.getElementById('root'));\n\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}